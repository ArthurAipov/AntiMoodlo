definitions:
  Models.Block:
    properties:
      blockid:
        type: integer
      blockname:
        type: string
      courseid:
        type: integer
    type: object
  Models.CorrectAnswer:
    properties:
      id:
        type: integer
      optionid:
        type: integer
      questionid:
        type: integer
    type: object
  Models.Course:
    properties:
      courseid:
        type: integer
      title:
        type: string
    type: object
  Models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  Models.MatchPair:
    properties:
      id:
        type: integer
      lefttext:
        type: string
      questionid:
        type: integer
      righttext:
        type: string
    type: object
  Models.OpenAnswer:
    properties:
      answertext:
        type: string
      questionid:
        type: integer
    type: object
  Models.Question:
    properties:
      id:
        type: integer
      questiontext:
        type: string
      questiontypeid:
        type: integer
      quizid:
        type: integer
    type: object
  Models.QuestionOption:
    properties:
      id:
        type: integer
      optiontext:
        type: string
      questionid:
        type: integer
    type: object
  Models.Quiz:
    properties:
      courseid:
        type: integer
      duration:
        type: integer
      enddate:
        type: string
      id:
        type: integer
      maxgrade:
        type: integer
      startdate:
        type: string
      stateid:
        type: integer
      submiteddate:
        type: string
      title:
        type: string
    type: object
  Models.User:
    properties:
      userid:
        type: integer
      userlogin:
        type: string
      userpassword:
        type: string
      userrole:
        type: integer
    type: object
info:
  contact: {}
paths:
  /blocks:
    get:
      description: Возвращает список всех блоков
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.Block'
            type: array
      summary: Получить все блоки
      tags:
      - blocks
    post:
      consumes:
      - application/json
      description: Создает блок, привязанный к курсу
      parameters:
      - description: Новый блок
        in: body
        name: block
        required: true
        schema:
          $ref: '#/definitions/Models.Block'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.Block'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Создать новый блок
      tags:
      - blocks
  /blocks/{id}:
    delete:
      description: Удаляет блок по ID
      parameters:
      - description: ID блока
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Удалить блок
      tags:
      - blocks
    put:
      consumes:
      - application/json
      description: Обновляет имя блока и ID курса
      parameters:
      - description: ID блока
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: block
        required: true
        schema:
          $ref: '#/definitions/Models.Block'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Block'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Обновить блок
      tags:
      - blocks
  /courses:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.Course'
            type: array
      summary: Получить все курсы
      tags:
      - Courses
    post:
      consumes:
      - application/json
      parameters:
      - description: Курс
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/Models.Course'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.Course'
      summary: Создать курс
      tags:
      - Courses
  /courses/{id}:
    delete:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Удалить курс
      tags:
      - Courses
    get:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Course'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Получить курс по ID
      tags:
      - Courses
    put:
      consumes:
      - application/json
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      - description: Курс
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/Models.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Course'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Обновить курс
      tags:
      - Courses
  /questions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.Question'
            type: array
      summary: Получить все вопросы
      tags:
      - Questions
  /questions/{id}:
    delete:
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Удалить вопрос
      tags:
      - Questions
    put:
      consumes:
      - application/json
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: Вопрос
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/Models.Question'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Question'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Обновить вопрос
      tags:
      - Questions
  /questions/{id}/answers/correct:
    post:
      consumes:
      - application/json
      description: Добавляет правильный вариант ответа к вопросу (по ID)
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: Правильный ответ
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/Models.CorrectAnswer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.CorrectAnswer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Добавить правильный ответ
      tags:
      - answers
  /questions/{id}/answers/match:
    post:
      consumes:
      - application/json
      description: Добавляет пару "лево-право" для вопросов типа Match
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: Пара для сопоставления
        in: body
        name: pair
        required: true
        schema:
          $ref: '#/definitions/Models.MatchPair'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.MatchPair'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Добавить пару для сопоставления
      tags:
      - answers
  /questions/{id}/answers/open:
    post:
      consumes:
      - application/json
      description: Добавляет открытый ответ для вопроса с открытой формой
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: Открытый ответ
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/Models.OpenAnswer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.OpenAnswer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Добавить открытый ответ
      tags:
      - answers
  /questions/{id}/options:
    post:
      consumes:
      - application/json
      description: Добавляет один из вариантов ответа для вопроса (Multiple/Single
        Choice)
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: Вариант ответа
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/Models.QuestionOption'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.QuestionOption'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Добавить вариант ответа
      tags:
      - answers
  /quizzes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.Quiz'
            type: array
      summary: Получить все тесты
      tags:
      - Quizzes
    post:
      consumes:
      - application/json
      parameters:
      - description: Тест
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/Models.Quiz'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.Quiz'
      summary: Создать тест
      tags:
      - Quizzes
  /quizzes/{id}:
    delete:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Удалить тест
      tags:
      - Quizzes
    get:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Quiz'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Получить тест по ID
      tags:
      - Quizzes
    put:
      consumes:
      - application/json
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: Тест
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/Models.Quiz'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.Quiz'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Обновить тест
      tags:
      - Quizzes
  /quizzes/{id}/questions:
    get:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.Question'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Получить вопросы теста
      tags:
      - Questions
    post:
      consumes:
      - application/json
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: Вопрос
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/Models.Question'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.Question'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Добавить вопрос в тест
      tags:
      - Questions
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Models.User'
            type: array
      summary: Получить всех пользователей
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: Пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Models.User'
      summary: Создать нового пользователя
      tags:
      - Users
  /users/{id}:
    delete:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Удалить пользователя
      tags:
      - Users
    get:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Получить пользователя по ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Обновить пользователя
      tags:
      - Users
  /users/login/{login}:
    get:
      parameters:
      - description: Логин пользователя
        in: path
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Models.ErrorResponse'
      summary: Получить пользователя по логину
      tags:
      - Users
swagger: "2.0"
